From c6b52d0ab18a5865d1cce42c715891a885caddc4 Mon Sep 17 00:00:00 2001
From: Fakeman <55951275+fakemanoan@users.noreply.github.com>
Date: Sat, 25 Feb 2023 12:31:19 +0000
Subject: [PATCH 1/1] Add back pre-S createEventQueue function

Shimming our GPSD shim does not work for some reason. Using this method, even though it is the same as the shim, works for some reason.

Change-Id: I660368fa3d7d217464d699b263a73fd3f6abd317
---
 libs/sensor/SensorManager.cpp              | 19 +++++++++++++++++++
 libs/sensor/include/sensor/SensorManager.h |  2 ++
 2 files changed, 21 insertions(+)

diff --git a/libs/sensor/SensorManager.cpp b/libs/sensor/SensorManager.cpp
index 62f4b4e3e2..894d1d119b 100644
--- a/libs/sensor/SensorManager.cpp
+++ b/libs/sensor/SensorManager.cpp
@@ -244,6 +244,25 @@ sp<SensorEventQueue> SensorManager::createEventQueue(
     return queue;
 }
 
+sp<SensorEventQueue> SensorManager::createEventQueue(
+    String8 packageName, int mode) {
+    sp<SensorEventQueue> queue;
+
+    Mutex::Autolock _l(mLock);
+    while (assertStateLocked() == NO_ERROR) {
+        sp<ISensorEventConnection> connection = mSensorServer->createSensorEventConnection(
+            packageName, mode, mOpPackageName, String16(""));
+        if (connection == nullptr) {
+            // SensorService just died or the app doesn't have required permissions.
+            ALOGE("createEventQueue: connection is NULL.");
+            return nullptr;
+        }
+        queue = new SensorEventQueue(connection);
+        break;
+    }
+    return queue;
+}
+
 bool SensorManager::isDataInjectionEnabled() {
     Mutex::Autolock _l(mLock);
     if (assertStateLocked() == NO_ERROR) {
diff --git a/libs/sensor/include/sensor/SensorManager.h b/libs/sensor/include/sensor/SensorManager.h
index 09ac7edf27..020da43b3a 100644
--- a/libs/sensor/include/sensor/SensorManager.h
+++ b/libs/sensor/include/sensor/SensorManager.h
@@ -61,6 +61,8 @@ public:
     Sensor const* getDefaultSensor(int type);
     sp<SensorEventQueue> createEventQueue(
         String8 packageName = String8(""), int mode = 0, String16 attributionTag = String16(""));
+    sp<SensorEventQueue> createEventQueue(
+        String8 packageName, int mode);
     bool isDataInjectionEnabled();
     int createDirectChannel(size_t size, int channelType, const native_handle_t *channelData);
     void destroyDirectChannel(int channelNativeHandle);
-- 
2.25.1

